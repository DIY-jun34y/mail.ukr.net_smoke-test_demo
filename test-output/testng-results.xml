<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="13" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="79359" started-at="2015-09-10T23:04:03Z" finished-at="2015-09-10T23:05:22Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="79359" started-at="2015-09-10T23:04:03Z" finished-at="2015-09-10T23:05:22Z">
      <class name="tests.SmokeTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="setup" is-config="true" duration-ms="4359" started-at="2015-09-11T02:04:03Z" finished-at="2015-09-11T02:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:07Z" finished-at="2015-09-11T02:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testRegPageEmptyFieldsErrorHandling()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testRegPageEmptyFieldsErrorHandling" duration-ms="1563" started-at="2015-09-11T02:04:07Z" description="Checking error messages on the Registration page - &#039;Empty fields&#039;" finished-at="2015-09-11T02:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegPageEmptyFieldsErrorHandling -->
        <test-method status="PASS" signature="testCheckRegistrationLinks()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testCheckRegistrationLinks" duration-ms="1531" started-at="2015-09-11T02:04:09Z" description="Checking registration links on the login page" finished-at="2015-09-11T02:04:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckRegistrationLinks -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:09Z" finished-at="2015-09-11T02:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="FAIL" signature="testLogin(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testLogin" duration-ms="3531" started-at="2015-09-11T02:04:10Z" description="As a User I can login only with valid credentials" data-provider="login" finished-at="2015-09-11T02:04:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester0667804531]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p455word]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid credentials]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Inbox folder link is missing! expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Inbox folder link is missing! expected [false] but found [true]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at tests.SmokeTest.testLogin(SmokeTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:10Z" finished-at="2015-09-11T02:04:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testLogin(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testLogin" duration-ms="1016" started-at="2015-09-11T02:04:14Z" description="As a User I can login only with valid credentials" data-provider="login" finished-at="2015-09-11T02:04:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester0667804531]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong_pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Неверно указан логин или пароль. Подробнее]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:14Z" finished-at="2015-09-11T02:04:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:15Z" finished-at="2015-09-11T02:04:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="FAIL" signature="testLogin(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testLogin" duration-ms="1281" started-at="2015-09-11T02:04:15Z" description="As a User I can login only with valid credentials" data-provider="login" finished-at="2015-09-11T02:04:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrong_login_name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p455word]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Неверно указан логин или пароль. Подробнее ]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Something wrong with Error messsage! expected [Неверно указан логин или пароль. Подробнее ] but found [Неверно указан логин или пароль. Подробнее]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Something wrong with Error messsage! expected [Неверно указан логин или пароль. Подробнее ] but found [Неверно указан логин или пароль. Подробнее]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at tests.SmokeTest.testLogin(SmokeTest.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:16Z" finished-at="2015-09-11T02:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testCreateMessage()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testCreateMessage" duration-ms="7359" started-at="2015-09-11T02:04:16Z" description="As a User I can create a message(it&#039;s stored in Drafts automatically)" finished-at="2015-09-11T02:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMessage -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:23Z" finished-at="2015-09-11T02:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testSendMessage()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testSendMessage" duration-ms="15375" started-at="2015-09-11T02:04:23Z" description="As a User I can send a message (it&#039;s stored in Sent automatically)" finished-at="2015-09-11T02:04:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendMessage -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:39Z" finished-at="2015-09-11T02:04:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testOpenInboxMessage()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testOpenInboxMessage" duration-ms="5672" started-at="2015-09-11T02:04:39Z" description="As a User I can open inbox message from list" finished-at="2015-09-11T02:04:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenInboxMessage -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:44Z" finished-at="2015-09-11T02:04:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testReplyToMessage()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testReplyToMessage" duration-ms="12344" started-at="2015-09-11T02:04:44Z" description="As a User I can reply to inbox message" finished-at="2015-09-11T02:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplyToMessage -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:04:57Z" finished-at="2015-09-11T02:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testForwardInboxMessage()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testForwardInboxMessage" duration-ms="9062" started-at="2015-09-11T02:04:57Z" description="As a User I can forward inbox message" finished-at="2015-09-11T02:05:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForwardInboxMessage -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:05:06Z" finished-at="2015-09-11T02:05:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testMoveToTrashFromInboxList()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testMoveToTrashFromInboxList" duration-ms="4906" started-at="2015-09-11T02:05:06Z" description="As a User I can move a message to Trash strait from Inbox-list " finished-at="2015-09-11T02:05:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveToTrashFromInboxList -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:05:11Z" finished-at="2015-09-11T02:05:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="FAIL" signature="testReadAndMoveToTrash()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testReadAndMoveToTrash" duration-ms="5828" started-at="2015-09-11T02:05:11Z" description="As a User I can delete inbox message to Trash while it&#039;s opened)" finished-at="2015-09-11T02:05:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Mismatch of Date in original/deleted message! expected [сьогодні, 01:03] but found [test: create new message-3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Mismatch of Date in original/deleted message! expected [сьогодні, 01:03] but found [test: create new message-3]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)
	at tests.SmokeTest.testReadAndMoveToTrash(SmokeTest.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadAndMoveToTrash -->
        <test-method status="PASS" signature="newSoftAssertObject()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="newSoftAssertObject" is-config="true" duration-ms="0" started-at="2015-09-11T02:05:17Z" finished-at="2015-09-11T02:05:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newSoftAssertObject -->
        <test-method status="PASS" signature="testRecoverFromTrashToInbox()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="testRecoverFromTrashToInbox" duration-ms="5016" started-at="2015-09-11T02:05:17Z" description="As a User I can recover message from Trash-list back to Inbox" finished-at="2015-09-11T02:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecoverFromTrashToInbox -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.SmokeTest@15ba1ef]" name="tearDown" is-config="true" duration-ms="469" started-at="2015-09-11T02:05:22Z" finished-at="2015-09-11T02:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SmokeTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
